@import "../Variables";

.SettingsPage {
	display: flex;
	flex-direction: column;
	align-items: center;

	.Section {
		width: 600px;
		padding: 20px;
		margin-bottom: 50px;

		background-color: rgba(black, 0.2);
		backdrop-filter: blur(7px);
		border-top: 5px solid $primaryColor;

		.Button {
			color: $primaryColor;
			border: 2px solid $primaryColor;

			width: max-content;
			padding: 5px;

			cursor: pointer;
		}

		h1 {
			margin-top: 0;
		}

		u {
			cursor: pointer;
		}

		> :not(h1) {
			margin-top: 15px;
		}

		.FieldContainer {
			.ResetButton {
				margin-left: 10px;

				cursor: pointer;
				transition: color $ft;

				svg {
					width: 20px;
					height: 20px;

					margin-top: 5px;
				}

				.Tooltip {
					color: white;
				}

				&:hover {
					color: white;
				}
			}

			.ColorPicker {
				border: none;
				outline: none;
				appearance: none;

				background: transparent;
				padding: 0;
				margin-right: 10px;

				width: 20px;
				height: 23px;

				cursor: pointer;

				&::-webkit-color-swatch {
					border: none;
				}
			}
			
			.SliderElement {
				position: absolute;
				top: -1px;
			
				appearance: none;
				border: none;
				outline: none;
			
				background-color: rgba(black, 0.2);
			
				height: 25px;
				padding: 0;
			
				width: 100%;
				border-radius: 100px;
			
				opacity: 0;
				pointer-events: all;
				z-index: 1000;
			}

			.SliderContainer {
				position: relative;
				gap: 5px;
				width: 52%;

				pointer-events: none;

				.ResetButton {
					position: absolute;
					left: 100%;
					pointer-events: all;
				}
			}

			.Slider {
				position: relative;
			
				appearance: none;
				border: none;
				outline: none;
			
				background-color: rgba(black, 0.2);
			
				height: 7px;
				padding: 0;
			
				width: 100%;
				border-radius: 100px;
			
				.SliderKnob {
					background-color: white;
					width: 15px;
					height: 15px;
					border-radius: 100px;
					cursor: pointer;
					transform: translateX(calc(var(--value) * 20));
				}
			
				.SliderProgress {
					position: absolute;
			
					z-index: -1;
					border-radius: 100px;
			
					width: var(--value);
					height: 100%;
			
					background: white;
			
					filter: brightness(1.2);
				}
			}
		}

		&.TagsManager {
			> .Tags {
				flex-wrap: wrap;
				gap: 7px;
			}

			.Tag {
				background: $primaryColor;
				color: white;

				padding: 2px 6px;
				gap: 3px;

				> .LinkWrapper {
					cursor: pointer !important;

					&:hover {
						text-decoration: underline !important;
					}
				}

				> svg {
					margin-right: -5px;

					width: 20px;
					height: 20px;

					cursor: pointer;

					&:hover {
						background: rgba(black, 0.2);
					}
				}
			}

			.TagField {
				border: none;
				outline: none;

				background: rgba(black, 0.2);
				color: var(--txt-color);

				padding: 2px 6px;
				width: 120px;

				&::placeholder {
					color: var(--txt-color);
					opacity: 0.75;
				}
			}
		}

		&.BlacklistsSection {
			.Blacklist {
				position: relative;
				background: rgba(black, 0.1);
				padding: 10px;

				h3 {
					margin-top: 0;
				}

				p {
					margin-bottom: 0;
				}

				.FooterButtons {
					position: absolute;
					top: 0;
					right: 0;
					padding: 10px;

					.FooterButton {
						padding: 5px;
						cursor: pointer;
						border-radius: var(--primary-border-radius);

						&:hover {
							background: rgba(white, 0.05);
						}
					}
				}
			}
		}
	}
}

input.Field,
textarea.Field {
	position: relative;

	background: none;
	outline: none;
	border: none;

	border-bottom: 2px solid var(--txt-color);
	padding: 7px;
	min-width: 50%;

	color: var(--txt-color);

	&::placeholder {
		color: var(--txt-color);
	}

	transition: color $ft, border-color $ft, background-color $ft;

	&.Confidential {
		color: transparent;
		text-shadow: 0 0 7px var(--txt-color);
	}

	&:focus {
		color: white;
		border-color: $primaryColor;
		background-color: $secondaryBG;
	}
}

textarea.Field {
	min-height: 100px;
}

#root .Mobile .SettingsPage {
	.Section {
		width: 80vw;
	}
}
